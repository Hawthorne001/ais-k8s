{{- $runtime := requiredEnv "CONTAINER_RUNTIME" -}}

alloy:
  configMap:
    # -- Create a new ConfigMap for the config file.
    create: false
    # -- Name of existing ConfigMap to use. Used when create is false.
    name: alloy-config
    # -- Key in ConfigMap to get config from.
    key: config.alloy

  # -- Minimum stability level of components and behavior to enable. Must be
  # one of "experimental", "public-preview", or "generally-available".
  stabilityLevel: "experimental"

  # -- Address to listen for traffic on. 0.0.0.0 exposes the UI to other
  # containers.
  listenAddr: 0.0.0.0

  # -- Port to listen for traffic on.
  listenPort: 12345

  # -- Host aliases to add to the Alloy container.
  hostAliases: []
  # - ip: "20.21.22.23"
  #   hostnames:
  #     - "company.grafana.net"

  mounts:
    # -- Mount /var/log from the host into the container for log collection.
    varlog: false
    # -- Mount /var/lib/docker/containers from the host into the container for log
    # collection.
    dockercontainers: false
    # -- Extra volume mounts to add into the Grafana Alloy container. Does not
    # affect the watch container.
    extra:
      # Base mounts
      - name: proc
        mountPath: /proc
      - name: sys
        mountPath: /sys
      - name: ais
        mountPath: /ais
      # cAdvisor required mounts
      - name: rootfs
        mountPath: /rootfs
        readOnly: true
      - name: dev-disk
        mountPath: /dev/disk
        readOnly: true
      # cAdvisor runtime-specific sockets and data directories
{{- if eq $runtime "crio" }}
      - name: crio-sock
        mountPath: /var/run/crio/crio.sock
        readOnly: false
      - name: var-lib-containers
        mountPath: /var/lib/containers
        readOnly: true
{{- end }}
{{- if eq $runtime "containerd" }}
      - name: containerd-sock
        mountPath: /run/containerd/containerd.sock
        readOnly: false
      - name: var-lib-containerd
        mountPath: /var/lib/containerd
        readOnly: true
{{- end }}
{{- if eq $runtime "docker" }}
      - name: docker-sock
        mountPath: /var/run/docker.sock
        readOnly: false
      - name: var-lib-docker
        mountPath: /var/lib/docker
        readOnly: true
{{- end }}

  # -- Resource requests and limits to apply to the Grafana Alloy container.
  resources: {}

image:
  # -- Grafana Alloy image registry (defaults to docker.io)
  registry: "docker.io"
  # -- Grafana Alloy image repository.
  repository: grafana/alloy
  # -- (string) Grafana Alloy image tag. When empty, the Chart's appVersion is
  # used.
  tag: null
  # -- Grafana Alloy image's SHA256 digest (either in format "sha256:XYZ" or "XYZ"). When set, will override `image.tag`.
  digest: null
  # -- Grafana Alloy image pull policy.
  pullPolicy: IfNotPresent
  # -- Optional set of image pull secrets.
  pullSecrets: []


controller:
  # -- Type of controller to use for deploying Grafana Alloy in the cluster.
  # Must be one of 'daemonset', 'deployment', or 'statefulset'.
  type: 'daemonset'
  volumes:
    # -- Extra volumes to add to the Grafana Alloy pod.
    extra:
      # Base volumes
      - name: ais
        hostPath:
          path: /ais
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
      # cAdvisor required volumes
      - name: rootfs
        hostPath:
          path: /
      - name: dev-disk
        hostPath:
          path: /dev/disk
      # Container runtime specific cAdvisor required volumes + sockets
{{- if eq $runtime "crio" }}
      - name: crio-sock
        hostPath:
          path: /var/run/crio/crio.sock
          type: Socket
      - name: var-lib-containers
        hostPath:
          path: /var/lib/containers
{{- end }}
{{- if eq $runtime "containerd" }}
      - name: containerd-sock
        hostPath:
          path: /run/containerd/containerd.sock
          type: Socket
      - name: var-lib-containerd
        hostPath:
          path: /var/lib/containerd
{{- end }}
{{- if eq $runtime "docker" }}
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      - name: var-lib-docker
        hostPath:
          path: /var/lib/docker
{{- end }}
