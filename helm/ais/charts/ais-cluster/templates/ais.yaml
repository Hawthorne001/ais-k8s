apiVersion: ais.nvidia.com/v1beta1
kind: AIStore
metadata:
  name: {{ .Values.global.cluster }}
  namespace: {{ .Release.namespace }}
spec:
  size: {{ .Values.size }}
  configToUpdate:
    {{- if eq .Values.protocol "https" }}
      {{- $userHTTP := (dig "net" "http" dict .Values.configToUpdate) }}
      {{- $httpsDefaults := dict
          "server_crt" "/var/certs/tls.crt"
          "server_key" "/var/certs/tls.key"
          "use_https" true
          "skip_verify" .Values.https.skipVerifyCert
          "client_ca_tls" "/var/certs/ca.crt"
          "client_auth_tls" 0
      }}
      {{- $mergedHTTP := merge $httpsDefaults $userHTTP }}
      {{- $userNet := (dig "net" dict .Values.configToUpdate) }}
      {{- $mergedNet := merge (dict "http" $mergedHTTP) $userNet }}
      {{- toYaml (merge (dict "net" $mergedNet) (omit .Values.configToUpdate "net")) | nindent 4 }}
    {{- else }}
      {{- with .Values.configToUpdate }}
      {{- toYaml . | nindent 4 }}
      {{- end }}
    {{- end }}
  proxySpec:
    annotations:
      {{- with .Values.proxySpec.annotations }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    labels:
      {{- with .Values.proxySpec.labels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    tolerations:
      {{- with .Values.proxySpec.tolerations }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    env:
      {{- with .Values.proxySpec.env }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- if .Values.proxySpec.size }}
    size: {{ .Values.proxySpec.size }}
    {{- end }}
    hostPort: {{ .Values.proxySpec.hostPort | default 51080 }}
    servicePort: {{ .Values.proxySpec.servicePort | default 51080 }}
    portPublic: {{ .Values.proxySpec.portPublic | default 51080 }}
    portIntraControl: {{ .Values.proxySpec.portIntraControl | default 51081 }}
    portIntraData: {{ .Values.proxySpec.portIntraData | default 51082 }}
    capabilities:
      privileged: true
    nodeSelector:
      {{- if not .Values.proxySpec.nodeSelector }}
        nvidia.com/ais-proxy: {{ .Values.global.cluster | quote }}
      {{- else if and (kindIs "string" .Values.proxySpec.nodeSelector) (eq .Values.proxySpec.nodeSelector "all") }}
        {{- toYaml .Values.global.nodes | nindent 6 }}
      {{- else }}
        {{- toYaml .Values.proxySpec.nodeSelector | nindent 6 }}
      {{- end }}
    {{- if .Values.proxySpec.resources }}
    resources:
      {{- toYaml .Values.proxySpec.resources | nindent 6 }}
    {{- end }}
  targetSpec:
    annotations:
      {{- with .Values.targetSpec.annotations }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    labels:
      {{- with .Values.targetSpec.labels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    tolerations:
      {{- with .Values.targetSpec.tolerations }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    env:
      {{- with .Values.targetSpec.env }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
    {{- if .Values.targetSpec.size }}
    size: {{ .Values.targetSpec.size }}
    {{- end }}
    hostPort: {{ .Values.targetSpec.hostPort | default 51081 }}
    servicePort: {{ .Values.targetSpec.servicePort | default 51081 }}
    portPublic: {{ .Values.targetSpec.portPublic | default 51081 }}
    portIntraControl: {{ .Values.targetSpec.portIntraControl | default 51082 }}
    portIntraData: {{ .Values.targetSpec.portIntraData | default 51083 }}
    hostNetwork: {{ .Values.targetSpec.hostNetwork }}
    capabilities:
      privileged: true
    nodeSelector:
      {{- if not .Values.targetSpec.nodeSelector }}
          nvidia.com/ais-target: {{ .Values.global.cluster | quote }}
      {{- else if and (kindIs "string" .Values.targetSpec.nodeSelector) (eq .Values.targetSpec.nodeSelector "all") }}
        {{ toYaml .Values.global.nodes | nindent 6 }}
      {{- else }}
        {{ toYaml .Values.targetSpec.nodeSelector | nindent 6 }}
      {{- end }}
    mounts:
    {{- $global := .Values.global }}
    {{- $size := $global.mpathSize }}
    {{- range $global.mpaths }}
      - path: {{ . }}
        size: {{ $size }}
        storageClass: {{ $global.storageClass }}
        selector:
          matchLabels:
            mpath: pv-{{ . | replace "/" "-" | trimPrefix "-" }}
    {{- end }}
    {{- if .Values.targetSpec.resources }}
    resources:
      {{- toYaml .Values.targetSpec.resources | nindent 6 }}
    {{- end }}
  {{- with .Values.imagePullSecrets }}
  imagePullSecrets:
  {{- toYaml . | nindent 2 }}
  {{- end }}
  nodeImage: "{{ .Values.nodeImage.name }}:{{ .Values.nodeImage.tag }}"
  initImage: "{{ .Values.initImage.name }}:{{ .Values.initImage.tag }}"
  {{- if hasKey .Values "logSidecarImage" }}
  {{- if and (hasKey .Values.logSidecarImage "name") (hasKey .Values.logSidecarImage "tag") }}
  logSidecarImage: "{{ .Values.logSidecarImage.name }}:{{ .Values.logSidecarImage.tag }}"
  {{- end }}
  {{- end }}
  hostpathPrefix: {{ .Values.hostpathPrefix }}
  stateStorageClass: {{ .Values.stateStorageClass }}
  apiMode: {{.Values.apiMode }}
  shutdownCluster: {{ .Values.shutdownCluster }}
  cleanupMetadata: {{ .Values.cleanupMetadata }}
  cleanupData: {{ .Values.cleanupData }}
  {{- if eq .Values.protocol "https" }}
  tlsSecretName: {{ .Values.https.tlsSecret }}
  {{- end }}
  {{- if .Values.cloud }}
  awsSecretName: {{ .Values.cloud.awsSecretName }}
  gcpSecretName: {{ .Values.cloud.gcpSecretName }}
  ociSecretName: {{ .Values.cloud.ociSecretName }}
  {{- end }}
  authNSecretName: {{ .Values.authNSecretName }}
  enableExternalLB: false
  {{- with .Values.multihome.hostnameMap }}
  hostnameMap: {{ toJson . }}
  {{- end }}
  {{- if .Values.multihome.networkAttachment }}
  networkAttachment: "{{ .Values.multihome.networkAttachment }}"
  {{- end }}
  logsDir: {{ .Values.logsDir }}
  clusterDomain: {{ .Values.clusterDomain | default "cluster.local" }}