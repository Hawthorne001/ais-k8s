{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "AuthN Chart Values",
  "type": "object",
  "properties": {
    "image": {
      "type": "object",
      "description": "Container image configuration",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Container image repository"
        },
        "tag": {
          "type": "string",
          "description": "Container image tag"
        },
        "pullPolicy": {
          "type": "string",
          "enum": ["Always", "IfNotPresent", "Never"],
          "description": "Image pull policy"
        }
      },
      "required": ["repository", "tag", "pullPolicy"]
    },
    "superuser": {
      "type": "object",
      "description": "Superuser credentials",
      "properties": {
        "name": {
          "type": "string",
          "description": "Superuser username"
        },
        "password": {
          "type": "string",
          "description": "Superuser password"
        }
      },
      "required": ["name", "password"]
    },
    "jwtSigningKey": {
      "type": "string",
      "description": "JWT signing key"
    },
    "tls": {
      "type": "object",
      "description": "TLS configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether TLS is enabled"
        },
        "createCert": {
          "type": "boolean",
          "description": "Whether to create a certificate as part of the AuthN deployment"
        },
        "secretName": {
          "type": "string",
          "description": "Name of the TLS secret. If using createCert, name of secret to create."
        },
        "certPath": {
          "type": "string",
          "description": "Path to TLS certificate file"
        },
        "keyPath": {
          "type": "string",
          "description": "Path to TLS private key file"
        }
      },
      "required": ["enabled", "createCert", "secretName", "certPath", "keyPath"]
    },
    "log": {
      "type": "object",
      "description": "Logging configuration",
      "properties": {
        "level": {
          "type": "string",
          "description": "Log level (0-5)"
        },
        "dir": {
          "type": "string",
          "description": "Log directory path"
        }
      },
      "required": ["level", "dir"]
    },
    "applicationPort": {
      "type": "integer",
      "minimum": 1,
      "maximum": 65535,
      "description": "Port for AuthN server to listen on"
    },
    "nodePort": {
      "type": "integer",
      "minimum": 30000,
      "maximum": 32767,
      "description": "NodePort -- Used by external clients such as CLI, SDKs, etc."
    },
    "lb": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable the AuthN LoadBalancer service."
        },
        "port": {
          "type": "integer",
          "default": 52001,
          "minimum": 1,
          "maximum": 65535,
          "description": "External port for the AuthN LoadBalancer service."
        },
        "clusterIP": {
          "type": ["string", "null"],
          "description": "Static cluster IP for the AuthN LoadBalancer service. If null or empty, Kubernetes assigns an IP from the service CIDR range."
        },
        "annotations": {
          "type": ["object", "null"],
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations to add to the AuthN LoadBalancer service. Use cloud provider specific annotations to configure a static external IP."
        }
      },
      "required": ["enabled", "port"]
    },
    "persistence": {
      "type": "object",
      "description": "Persistence configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether persistence is enabled"
        },
        "size": {
          "type": "string",
          "pattern": "^[0-9]+[KMG]?i?$",
          "description": "Storage size (e.g., 50Mi, 1Gi)"
        },
        "hostPath": {
          "type": "string",
          "description": "Host path for persistent storage"
        }
      },
      "required": ["enabled", "size", "hostPath"]
    }
  },
  "required": ["image", "superuser", "jwtSigningKey", "tls", "log", "applicationPort", "nodePort", "lb", "persistence"]
}
